task_struct HAS sched_entity (one per class) HAS run_queue (one per CPU custom to sched_class)


struct sched_grr_entity {
	struct list_head task_queue;
	unsigned long timeout;
	unsigned int time_slice;
	int nr_cpus_allowed;
	struct sched_grr_entity *back;
	struct grr_rq *grr_rq;
	struct grr_rq *my_q;
};

/* GRR classes' related field in a runqueue: */
struct grr_rq {
	unsigned long grr_nr_running;
#ifdef CONFIG_SMP
	unsigned long grr_nr_migratory;
	unsigned long grr_nr_total;
	int overloaded;
	struct plist_head pushable_tasks;
#endif
	int grr_throttled;
	u64 grr_time;
	u64 grr_runtime;
	/* Nests inside the rq lock: */
	raw_spinlock_t grr_runtime_lock;

#ifdef CONFIG_RT_GROUP_SCHED
	unsigned long grr_nr_boosted;

	struct rq *rq;
	struct list_head queue;
	struct task_group *tg;
#endif
};


struct rq {
....
	struct cfs_rq cfs;
	struct rt_rq rt;
#ifdef CONFIG_GRR
	struct grr_rq grr;
#endif
....
};


